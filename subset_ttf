#!/bin/bash

    # This program is free software: you can redistribute it and/or modify
    # it under the terms of the GNU General Public License as published by
    # the Free Software Foundation, either version 3 of the License, or
    # (at your option) any later version.

    # This program is distributed in the hope that it will be useful,
    # but WITHOUT ANY WARRANTY; without even the implied warranty of
    # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    # GNU General Public License for more details.

    # You should have received a copy of the GNU General Public License
    # along with this program.  If not, see <http://www.gnu.org/licenses/>.

# TODO adapt the glyph ranges to the needs of the Portuguese language,
# English, and maybe Greek?

# Dependencies {{{
# ----------------
#
# On Debian and Debian-based distros (Ubuntu, etc.), run:
#
#	sudo apt install fonttools
#
# }}}

# Description {{{
# ---------------
#
# This is "alpha" quality.  I still need to apply logic for testing the
# presence of the appropriate files, figure out a better way to handle
# the context of where this script is run from, etc.
#
# For now, this script should be run inside a directory that contains
# font files using the TrueType format, denoted by the `.ttf` extension.
#
# What this does:
# 1. Remove all glyphs that are not part basic latin and greek subsets,
#    the latin1-supplement, numerals and punctuation marks.
# 2. Output the result in `.woff` and `.woff2` files, which are suited
#    for use on the web.
#
# For the complete Unicode character table and code points, see this page:
# https://unicode-table.com
#
# }}}

# This function accepts two arguments.  The first is the name of the ttf
# file without the file type extension.  The second is the desired
# output format (woff|woff2).  These are provided by the subsequent
# loop.
subset_font() {
    pyftsubset "$1.ttf" \
    --unicodes='U+0020-007E,U+00A1-00FF,\
    U+0370-03CE,U+2010,U+2012-2014,U+2018-201F,U+2022-2027' \
    --layout-features='*' \
    --flavor="$2" \
    --output-file="$1.$2"
}

# Loop through all ttf files in the present working directory and run
# the `subset_font` function defined above.
for i in $(find ./*.ttf | sed 's,\(\./\)\([a-zA-Z0-9_-]*\)\(\.ttf\),\2,g'); do
    subset_font $i 'woff'
    subset_font $i 'woff2'
done

# vi:foldmethod=marker
